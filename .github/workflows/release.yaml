name: "Release Frontegg iOS SDK"
on:
  pull_request:
    types: [ closed ]
    branches:
      - master

concurrency:
  group: ci-release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish-packages:
    if: "github.event.pull_request.merged == true"
    name: "Publish Libraries"
    runs-on: 'macos-latest-large'
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      - name: Set git config
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
#      - name: Tag Check
#        id: tag_check
#        shell: bash -ex {0}
#        run: |
#          GET_API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/git/ref/tags/v${{ steps.set_current_version.outputs.CURRENT_VERSION }}"
#          http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
#            -H "Authorization: token ${GITHUB_TOKEN}")
#          if [ "$http_status_code" -ne "404" ] ; then
#            echo "::set-output name=exists_tag::true"
#          else
#            echo "::set-output name=exists_tag::false"
#          fi
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: Create Git Tag
#        if: steps.tag_check.outputs.exists_tag == 'false'
#        uses: azu/action-package-version-to-git-tag@v1
#        with:
#          version: ${{ steps.set_current_version.outputs.CURRENT_VERSION }}
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          github_repo: ${{ github.repository }}
#          git_commit_sha: ${{ github.sha }}
#          git_tag_prefix: "v"
#      - name: Create Release
#        id: create_release
#        if: steps.tag_check.outputs.exists_tag == 'false'
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: v${{ steps.set_current_version.outputs.CURRENT_VERSION }}
#          release_name: ${{ github.event.pull_request.title }}
#          body: |
#            ${{ github.event.pull_request.body }}
#          draft: false
#          prerelease: false
#      - name: Comment Release version
#        uses: actions/github-script@0.8.0
#        with:
#          github-token: ${{secrets.GITHUB_TOKEN}}
#          script: |
#            github.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: 'https://github.com/${{ github.repository }}/releases/tag/v${{ steps.set_current_version.outputs.CURRENT_VERSION }} is released ðŸŽ‰'
#            })
