//
//  WebauthnAssertion.swift
//
//
//  Created by David Antoon on 23/10/2024.
//

import Foundation
import AuthenticationServices

/// Struct representing the response of a WebAuthn assertion,
/// containing important data like clientDataJSON, authenticatorData, signature, and userHandle.
struct WebauthnAssertionResponse {
    let clientDataJSON: String        // JSON data that was sent to the authenticator
    let authenticatorData: String?    // Data from the authenticator (optional)
    let signature: String?            // Signature generated by the authenticator (optional)
    let userHandle: String?           // Identifier of the user (optional)

    /// Converts the WebauthnAssertionResponse object into a dictionary format.
    /// - Returns: A dictionary containing all properties, excluding `nil` values.
    func toDictionary() -> [String: Any] {
        var dict: [String: Any] = ["clientDataJSON": clientDataJSON]
        
        // Optional values are only included in the dictionary if they are not nil.
        if let authenticatorData = authenticatorData {
            dict["authenticatorData"] = authenticatorData
        }
        if let signature = signature {
            dict["signature"] = signature
        }
        if let userHandle = userHandle {
            dict["userHandle"] = userHandle
        }
        
        return dict
    }
}

@available(iOS 15.0, *)
/// Struct representing a WebAuthn assertion, which includes properties related to the public key credential assertion.
struct WebauthnAssertion {
    let id: String                      // Base64-encoded credential ID
    let rawId: String                   // Base64-encoded raw credential ID
    let type: String = "public-key"     // The type of credential, which is always "public-key" for WebAuthn
    let authenticatorAttachment: String = "platform" // The attachment method for the authenticator (e.g., platform)
    let response: WebauthnAssertionResponse  // The response data associated with the WebAuthn assertion

    /// Initializes the WebauthnAssertion with data from a platform public key credential assertion.
    /// - Parameter credential: An instance of `ASAuthorizationPlatformPublicKeyCredentialAssertion`
    /// which contains the WebAuthn data returned by the platform.
    init(credential: ASAuthorizationPlatformPublicKeyCredentialAssertion) {
        // Convert credential data into Base64-encoded strings
        self.id = credential.credentialID.toEncodedBase64()
        self.rawId = credential.credentialID.toEncodedBase64()
        self.response = WebauthnAssertionResponse(
            clientDataJSON: credential.rawClientDataJSON.toEncodedBase64(),
            authenticatorData: credential.rawAuthenticatorData.toEncodedBase64(),
            signature: credential.signature.toEncodedBase64(),
            userHandle: credential.userID.toEncodedBase64()
        )
    }
    
    /// Converts the WebauthnAssertion object into a dictionary format.
    /// - Returns: A dictionary containing all properties of the assertion, ready for serialization.
    func toDictionary() -> [String: Any] {
        return [
            "id": id,
            "rawId": rawId,
            "type": type,
            "authenticatorAttachment": authenticatorAttachment,
            "response": response.toDictionary()
        ]
    }
}
